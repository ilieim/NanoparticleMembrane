# -------- REQUIREMENTS: ---------
# 1) This example may require additional features and bug fixes for LAMMPS.
#   Be sure to download and copy the "additional_lammps_code" from 
#   http://moltemplate.org     (upper-left corner menu)
# 2) Unpack it
# 3) copy the .cpp and .h files to the src folding of your lammps installation.
# 4) Compile LAMMPS.
#
# (If LAMMPS complains about an "Invalid pair_style"
#  then you made a mistake in the instructions above.)
#

# -- Init Section --

include system.in.init

# -- Atom Definition Section --

#read_data system.data  # (this also works but commenting out)
read_data MP60_Mem.data	 # start with the minimized coordinates

# -- Settings Section --

include system.in.settings

# -- Run Section --


timestep      0.01
dump          1 all custom 2000 traj_final_npt.lammpstrj id mol type x y z ix iy iz
compute whatBond all property/local btype batom1 batom2
compute myBond all bond/local dist engpot force
dump myDump all local 2000 bond_dump.txt index c_whatBond[*] c_myBond[*]

thermo_style  custom step temp pe etotal vol epair ebond eangle
thermo        10000  # time interval for printing out "thermo" data

velocity all create 1.1 12345

fix fxlan all langevin  1.1  1.1  2.37   48279
fix fxnph all nph x 0 0 1000 y 0 0 1000 couple xy

# Note: The temperature is 1.1*ε
#       (ε = "epsilon" used by the coarse-grained lipid)
# Note: The langevin damping parameter is now "50.0" in units of time
#       (which are (m/(ε*σ^2))^(1/2) because we are using "units lj"
#        This is grossly underdamped compared to the real system, 
#        but it leads to more efficient sampling.)
# Note: We maintain the system system at constant (zero) tention 
#       using a barostat damping parameter Pdamp=1000 ("0 0 1000")


run           5000000

write_data system_after_fullEQ.data

